{"version":3,"sources":["navigation/modal.js","game/engine.js","navigation/topNav.js","settings/settings.js","game/tile.js","game/tileArea.js","game/gamestats.js","index.js"],"names":["MyModal","props","componentDidUpdate","prevProps","setState","showModal","render","id","Modal","style","color","show","state","onHide","modalInfo","failureCallback","top","Header","closeButton","Title","fontSize","title","Body","message","Footer","Button","onClick","successCallback","primaryButtonTitle","cancelOption","React","Component","rndInt","min","max","Math","ceil","floor","random","GameEngine","this","init","easy","row","col","nrows","ncols","nmines","nmarked","nuncovered","exploded","arr","val","res","array2d","mine","count","r","c","dr","dc","validCoord","allowed","abs","push","length","i","j","mines","s","toString","sprinkleMines","ff","a","done","getRendering","mark","instance","TopNavigation","Settings","ended","showEnd","toggleMode","updateDifficulty","success","started","updateStarted","toggleStart","Container","Row","Col","disabled","display","restart","endMessage","Tile","componentDidMount","window","addEventListener","handleResize","height","tileRef","current","offsetWidth","uncovered","colour","handleClick","startOnClick","uncoverTile","handleRightClick","e","preventDefault","touchTime","markTile","handleTouchStart","timer","setInterval","marked","handleTouchEnd","clearInterval","backgroundColor","cursor","onContextMenu","onTouchStart","onTouchEnd","ref","margin","createRef","bind","TileArea","generateTiles","engine","uncover","handleGameEnd","status","getStatus","gameStats","pause","unmarkAll","markBombs","decrementMines","incrementMines","rendering","cols","tiles","info","isNaN","key","padding","settings","getInstance","GameStats","startTimer","time","getTime","reset","timerOn","App","callback","setGameMode","gameStatsRef","finished","win","settingsRef","Fragment","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f14b2fdc.chunk.js","sourcesContent":["import React from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport '../styling/modal.css';\n\nexport default class MyModal extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showModal: false\n        }\n    }\n\n    componentDidUpdate = (prevProps) => {\n        if (prevProps !== this.props) {\n            this.setState({ showModal: this.props.showModal });\n        }\n    }\n\n    render = () => {\n        return (\n            <div id=\"modal\">\n                <Modal style={{color: \"black\"}}show={this.state.showModal} onHide={this.props.modalInfo.failureCallback} top>\n                    <Modal.Header closeButton>\n                        <Modal.Title style={{fontSize: '25px'}}>{this.props.modalInfo.title}</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <b>{this.props.modalInfo.message}</b>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button id=\"modalButton\" onClick={this.props.modalInfo.successCallback}>\n                            <div><b>{this.props.modalInfo.primaryButtonTitle}</b></div>\n                        </Button>\n                        {(this.props.modalInfo.cancelOption) ?\n                            <Button id=\"modalButton\" onClick={this.props.modalInfo.failureCallback}>\n                                <div><b>Cancel</b></div>\n                        </Button>\n                            : \"\"\n                        }\n                    </Modal.Footer>\n                </Modal>\n            </div>\n        );\n    }\n}","// Credit goes to Pavol Federl for the core game engine code.\n// This code is a modification to make it easier to use with React.\n\nconst STATE_HIDDEN = \"hidden\";\nconst STATE_SHOWN = \"shown\";\nconst STATE_MARKED = \"marked\";\n\nfunction array2d(nrows, ncols, val) {\n    const res = [];\n    for (let row = 0; row < nrows; row++) {\n        res[row] = [];\n        for (let col = 0; col < ncols; col++)\n            res[row][col] = val(row, col);\n    }\n    return res;\n}\n\nfunction rndInt(min, max) {\n    [min, max] = [Math.ceil(min), Math.floor(max)]\n    return min + Math.floor(Math.random() * (max - min + 1));\n}\n\nexport default class GameEngine {\n    static instance = null;\n    constructor() {\n        this.init(10, 10, 10);\n    }\n\n    static getInstance() {\n        if (GameEngine.instance === null) GameEngine.instance = new GameEngine();\n        return this.instance;\n    }\n\n    setGameMode(easy) {\n        if (easy) this.init(10, 10, 10);\n        else this.init(15, 15, 25);\n    }\n\n    validCoord(row, col) {\n        return row >= 0 && row < this.nrows && col >= 0 && col < this.ncols;\n    }\n\n    init(nrows, ncols, nmines) {\n        this.nrows = nrows;\n        this.ncols = ncols;\n        this.nmines = nmines;\n        this.nmarked = 0;\n        this.nuncovered = 0;\n        this.exploded = false;\n        this.arr = array2d(\n            nrows, ncols,\n            () => ({ mine: false, state: STATE_HIDDEN, count: 0 })\n        );\n    }\n\n    count(row, col) {\n        const c = (r, c) =>\n            (this.validCoord(r, c) && this.arr[r][c].mine ? 1 : 0);\n        let res = 0;\n        for (let dr = -1; dr <= 1; dr++)\n            for (let dc = -1; dc <= 1; dc++)\n                res += c(row + dr, col + dc);\n        return res;\n    }\n\n    sprinkleMines(row, col) {\n        let allowed = [];\n        for (let r = 0; r < this.nrows; r++) {\n            for (let c = 0; c < this.ncols; c++) {\n                if (Math.abs(row - r) > 2 || Math.abs(col - c) > 2)\n                    allowed.push([r, c]);\n            }\n        }\n        this.nmines = Math.min(this.nmines, allowed.length);\n        for (let i = 0; i < this.nmines; i++) {\n            let j = rndInt(i, allowed.length - 1);\n            [allowed[i], allowed[j]] = [allowed[j], allowed[i]];\n            let [r, c] = allowed[i];\n            this.arr[r][c].mine = true;\n        }\n        for (let r = 0; r < this.nrows; r++) {\n            for (let c = 0; c < this.ncols; c++) {\n                if (this.arr[r][c].state == STATE_MARKED)\n                    this.arr[r][c].state = STATE_HIDDEN;\n                this.arr[r][c].count = this.count(r, c);\n            }\n        }\n        let mines = []; let counts = [];\n        for (let row = 0; row < this.nrows; row++) {\n            let s = \"\";\n            for (let col = 0; col < this.ncols; col++) {\n                s += this.arr[row][col].mine ? \"B\" : \".\";\n            }\n            s += \"  |  \";\n            for (let col = 0; col < this.ncols; col++) {\n                s += this.arr[row][col].count.toString();\n            }\n            mines[row] = s;\n        }\n    }\n\n    uncover(row, col) {\n        if (!this.validCoord(row, col)) return false;\n        if (this.nuncovered === 0)\n            this.sprinkleMines(row, col);\n        if (this.arr[row][col].state !== STATE_HIDDEN) return false;\n        const ff = (r, c) => {\n            if (!this.validCoord(r, c)) return;\n            if (this.arr[r][c].state !== STATE_HIDDEN) return;\n            this.arr[r][c].state = STATE_SHOWN;\n            this.nuncovered++;\n            if (this.arr[r][c].count !== 0) return;\n            ff(r - 1, c - 1); ff(r - 1, c); ff(r - 1, c + 1);\n            ff(r, c - 1);; ff(r, c + 1);\n            ff(r + 1, c - 1); ff(r + 1, c); ff(r + 1, c + 1);\n        };\n        ff(row, col);\n        if (this.arr[row][col].mine) {\n            this.exploded = true;\n        }\n        return true;\n    }\n\n    mark(row, col) {\n        if (!this.validCoord(row, col)) return false;\n        if (this.arr[row][col].state === STATE_SHOWN) return false;\n        this.nmarked += this.arr[row][col].state === STATE_MARKED ? -1 : 1;\n        this.arr[row][col].state = this.arr[row][col].state === STATE_MARKED ? STATE_HIDDEN : STATE_MARKED;\n        return true;\n    }\n\n    getRendering() {\n        const res = [];\n        for (let row = 0; row < this.nrows; row++) {\n            let s = \"\";\n            for (let col = 0; col < this.ncols; col++) {\n                let a = this.arr[row][col];\n                if (this.exploded && a.mine) s += \"M\";\n                else if (a.state === STATE_HIDDEN) s += \"H\";\n                else if (a.state === STATE_MARKED) s += \"F\";\n                else if (a.mine) s += \"M\";\n                else s += a.count.toString();\n            }\n            res[row] = s;\n        }\n        return res;\n    }\n\n    getStatus() {\n        let done = this.exploded ||\n            this.nuncovered === this.nrows * this.ncols - this.nmines;\n        return {\n            done: done,\n            exploded: this.exploded,\n            nrows: this.nrows,\n            ncols: this.ncols,\n            nmarked: this.nmarked,\n            nuncovered: this.nuncovered,\n            nmines: this.nmines\n        }\n    }\n\n    unmarkAll() {\n        let arr = this.getRendering();\n        for (let row = 0; row < this.nrows; row++) {\n            for (let col = 0; col < this.ncols; col++) {\n                if (arr[row][col] === \"F\") this.mark(row, col);\n            }\n        }\n    }\n\n    markBombs() {\n        let arr = this.getRendering();\n        for (let row = 0; row < this.nrows; row++) {\n            for (let col = 0; col < this.ncols; col++) {\n                if (arr[row][col] === \"H\") this.mark(row, col);\n            }\n        }\n    }\n\n    getTileStatus(row, col) {\n        if (this.arr[row][col].mine) return -1;\n        return this.arr[row][col].count;\n    }\n}","import React from 'react';\nimport '../styling/topNav.css';\n\nexport default class TopNavigation extends React.Component {\n    render = () => {\n        return (\n            <div id=\"top-nav\">\n                <div id=\"top-nav-title\">\n                    <b>Minesweeper</b>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { Button, Container, Row, Col } from 'react-bootstrap';\nimport '../styling/settings.css';\n\nexport default class Settings extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            easy: true,\n            started: false,\n            showEnd: false\n        }\n    }\n\n    componentDidUpdate = (prevProps) => {\n        if (prevProps.ended !== this.props.ended) {\n            if (this.props.ended) this.setState({ showEnd: true });\n        }\n    }\n\n    toggleMode = () => {\n        this.setState({ easy: !this.state.easy },\n            this.props.updateDifficulty(!this.state.easy, (success) => {\n                if (success) this.setState({ started: false, showEnd: false }, this.props.updateStarted(false));\n                else this.setState({ easy: !this.state.easy });\n            })\n        );\n    }\n\n    toggleStart = () => {\n        this.setState({ started: !this.state.started },\n            this.props.updateStarted(!this.state.started, (success) => {\n                if (!success) this.setState({ started: true });\n            })\n        );\n    }\n\n    render = () => {\n        return (\n            <div id=\"settings\">\n                <div id=\"difficulty\">\n                    <Container>\n                        <Row>\n                            <Col>\n                                <Button disabled={this.state.easy} onClick={this.toggleMode}>\n                                    <div><b>Easy</b></div>\n                                </Button>\n                            </Col>\n                            <Col>\n                                <Button disabled={!this.state.easy} onClick={this.toggleMode}>\n                                    <div><b>Hard</b></div>\n                                </Button>\n                            </Col>\n                        </Row>\n                    </Container>\n                </div>\n                <div id=\"start\" style={{ display: (this.state.showEnd) ? \"\" : \"none\" }}>\n                    <Container>\n                        <Row>\n                            <Col>\n                                <Button onClick={() => { this.props.restart(); this.setState({ showEnd: false }) }}>\n                                    <div><b>{this.props.endMessage}! Click me to restart!</b></div>\n                                </Button>\n                            </Col>\n                        </Row>\n                    </Container>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport '../styling/tile.css';\n\nexport default class Tile extends React.Component {\n    constructor(props) {\n        super(props);\n        this.tileRef = React.createRef();\n        this.state = {\n            count: this.props.count,\n            uncovered: this.props.uncovered,\n            colour: this.props.colour,\n            fontSize: 0,\n            height: 0,\n            touchTime: 0,\n            marked: false\n        }\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    componentDidMount = () => {\n        window.addEventListener('resize', this.handleResize);\n        this.setState({ height: this.tileRef.current.offsetWidth });\n    }\n\n    componentDidUpdate = (prevProps) => {\n        if (prevProps !== this.props) {\n            this.setState({\n                count: this.props.count,\n                uncovered: this.props.uncovered,\n                colour: this.props.colour,\n                fontSize: 0.25 * this.tileRef.current.offsetWidth\n            });\n            this.handleResize();\n        }\n    }\n\n    handleResize = () => {\n        this.setState({\n            fontSize: 0.25 * this.tileRef.current.offsetWidth,\n            height: this.tileRef.current.offsetWidth\n        });\n    }\n\n    handleClick = () => {\n        if(!this.props.started && this.state.count === \"H\") {\n            this.props.startOnClick();\n        } else if (!this.props.started || this.state.count === \"F\") return;\n        this.props.uncoverTile(this.props.row, this.props.col);\n    }\n\n    handleRightClick = (e) => {\n        e.preventDefault();\n        if (!this.props.started || (this.state.count !== \"H\" && this.state.count !== \"F\")) return;\n        if (this.state.touchTime !== 0) return;\n        this.props.markTile(this.props.row, this.props.col);\n    }\n\n    handleTouchStart = () => {\n        if (!this.props.started && this.state.touchTime === 0) return;\n        this.timer = setInterval(() => {\n            this.setState({ touchTime: this.state.touchTime + 10 });\n            if ((this.state.touchTime + 10 > 660) && (!this.state.marked && (this.state.count === \"H\" || this.state.count === \"F\"))) { // One second is too long! 0.67 seconds is standard\n                this.props.markTile(this.props.row, this.props.col);\n                this.setState({ marked: true });\n            }\n        }, 10);\n    }\n\n    handleTouchEnd = () => {\n        clearInterval(this.timer);\n        this.setState({ touchTime: 0, marked: false });\n    }\n\n    render = () => {\n        return (\n            <div id=\"tile\" style={{ backgroundColor: this.state.colour, height: this.state.height, cursor: ((this.state.uncovered) ? \"\" : \"pointer\") }} onClick={this.handleClick} onContextMenu={this.handleRightClick} onTouchStart={this.handleTouchStart} onTouchEnd={this.handleTouchEnd} ref={this.tileRef}>\n                <div style={{ fontSize: this.state.fontSize, margin: \"auto\" }}>\n                    {(this.state.uncovered) ? (this.state.count === \"0\" || this.state.count === \"M\") ? \"\" : this.state.count : \"\"}\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport Tile from './tile';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport GameEngine from './engine';\nimport '../styling/tileArea.css';\n\nexport default class TileArea extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tiles: [[]],\n            info: [],\n            engine: GameEngine.getInstance()\n        }\n    }\n\n    componentDidMount = () => {\n        this.generateTiles();\n    }\n\n    componentDidUpdate = (prevProps) => {\n        if (prevProps !== this.props) this.generateTiles();\n    }\n\n    uncoverTile = (row, col) => {\n        this.state.engine.uncover(row, col);\n        this.handleGameEnd();\n        this.generateTiles();\n    }\n\n    handleGameEnd = () => {\n        let status = this.state.engine.getStatus();\n        if(status.done) {\n            this.props.gameStats.current.pause();\n            this.state.engine.unmarkAll();\n        } \n        if (status.done && status.exploded) this.props.showEnd(false);\n        else if (status.done && !status.exploded) {\n            this.props.showEnd(true);\n            this.state.engine.markBombs();\n        } \n    }\n\n    markTile = (row, col) => {\n        this.state.engine.mark(row, col);\n        if(this.state.engine.getRendering()[row][col] === \"F\") this.props.gameStats.current.decrementMines();\n        else this.props.gameStats.current.incrementMines();\n        this.generateTiles();\n    }\n\n    generateTiles = () => {\n        let rendering = this.state.engine.getRendering();\n        let cols = (this.props.easy) ? 10 : 15;\n        var tiles = [[]];\n        var info = [];\n        for (var i = 0; i < cols; i++) {\n            tiles[i] = [];\n            for (var j = 0; j < cols; j++) {\n                var colour = (((i + 10) + j) % 2 === 0) ? '#0494F5' : '#0476C2';\n                if (!isNaN(rendering[i][j])) colour = \"#FFF\";\n                if ((rendering[i][j] === \"F\" || rendering[i][j] === \"M\")) colour = \"#800000\";\n                tiles[i].push(\n                    <Col key={(i * 10) + j} style={{ padding: 0, margin: 0 }}>\n                        <Tile\n                            row={i}\n                            col={j}\n                            colour={colour}\n                            started={this.props.started}\n                            count={rendering[i][j]}\n                            uncovered={rendering[i][j] !== \"H\" && rendering[i][j] !== \"F\"}\n                            uncoverTile={this.uncoverTile}\n                            markTile={this.markTile}\n                            startOnClick={this.startOnClick}\n                        />\n                    </Col>\n                );\n            }\n        }\n        for (i = 0; i < cols; i++) info.push(<Row key={(i * 10)} style={{ margin: 'auto' }}>{tiles[i]}</Row>);\n        this.setState({ tiles: tiles, info: info });\n    }\n\n    startOnClick = () => {\n        this.props.settings.current.toggleStart();\n    }\n\n    render = () => {\n        return (\n            <div id=\"game-border\">\n                <div id='tile-area'>\n                    <Container>\n                        {this.state.info}\n                    </Container>\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport GameEngine from './engine';\nimport '../styling/gamestats.css';\n\nexport default class GameStats extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            timerOn: false,\n            time: 0,\n            mines: 10,\n            engine: GameEngine.getInstance()\n        }\n    }\n\n    componentDidUpdate = (prevProps) => {\n        if (prevProps.started !== this.props.started) {\n            if (this.props.started) {\n                this.startTimer();\n            }\n        } else if (prevProps.easy !== this.props.easy) {\n            this.setState({ mines: this.state.engine.getStatus().nmines })\n        }\n    }\n\n    // Timer Functions\n    startTimer = () => {\n        this.timer = setInterval(() => {\n            this.setState({ time: this.state.time + 1 });\n        }, 1000);\n    }\n\n    getTime = () => {\n        return this.state.time;\n    }\n\n    // Mine Functions\n    incrementMines = () => {\n        this.setState({ mines: this.state.mines + 1 });\n    }\n\n    decrementMines = () => {\n        this.setState({ mines: this.state.mines - 1 });\n    }\n\n    // External Helpers\n    pause = () => {\n        clearInterval(this.timer);\n        this.setState({ mines: this.state.engine.getStatus().nmines });\n    }\n\n    reset = () => {\n        clearInterval(this.timer);\n        this.setState({ time: 0, mines: this.state.engine.getStatus().nmines });\n    }\n\n    render = () => {\n        return (\n            <div id=\"game-stats\">\n                <Container>\n                    <Row>\n                        <Col><b>Time: {this.state.time}</b></Col>\n                        <Col><b>Mines: {this.state.mines}</b></Col>\n                    </Row>\n                </Container>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport MyModal from './navigation/modal';\nimport GameEngine from './game/engine';\nimport './styling/index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport TopNavigation from './navigation/topNav';\nimport Settings from './settings/settings';\nimport TileArea from './game/tileArea';\nimport GameStats from './game/gamestats';\n\nclass App extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.settingsRef = React.createRef();\n\t\tthis.gameStatsRef = React.createRef();\n\t\tthis.state = {\n\t\t\teasy: true,\n\t\t\tstarted: false,\n\t\t\tshowModal: false,\n\t\t\tshowEnd: false,\n\t\t\tendMessage: \"Boom\",\n\t\t\tmodalInfo: {},\n\t\t\tengine: GameEngine.getInstance()\n\t\t}\n\t}\n\n\tupdateDifficulty = (easy, callback) => {\n\t\tif (this.state.started)\n\t\t\tthis.showModal(false, false,\n\t\t\t\t() => {\n\t\t\t\t\tthis.state.engine.setGameMode(easy);\n\t\t\t\t\tthis.gameStatsRef.current.reset();\n\t\t\t\t\tthis.setState({ easy: easy, started: false, showModal: false }, callback(true));\n\t\t\t\t},\n\t\t\t\t() => { this.setState({ started: true, showModal: false }, callback(false)); }\n\t\t\t);\n\t\telse {\n\t\t\tthis.state.engine.setGameMode(easy);\n\t\t\tthis.gameStatsRef.current.reset();\n\t\t\tthis.setState({ easy: easy, started: false }, callback(true));\n\t\t}\n\t}\n\n\tupdateStarted = (started, callback) => {\n\t\tif (this.state.started)\n\t\t\tthis.showModal(false, false,\n\t\t\t\t() => {\n\t\t\t\t\tthis.state.engine.setGameMode(this.state.easy);\n\t\t\t\t\tthis.setState({ started: started, showModal: false }, callback(true));\n\t\t\t\t},\n\t\t\t\t() => { this.setState({ showModal: false }, callback(false)); }\n\t\t\t);\n\t\telse this.setState({ started: started, showEnd: false });\n\t}\n\n\tshowModal = (finished, win, successCallback, failureCallback) => {\n\t\tvar info = {\n\t\t\ttitle: \"You have a game in progress.\",\n\t\t\tmessage: `Are you sure you want to stop? You will lose your progress.`,\n\t\t\tcancelOption: true,\n\t\t\tprimaryButtonTitle: \"Continue\",\n\t\t\tsuccessCallback: successCallback,\n\t\t\tfailureCallback: failureCallback\n\t\t}\n\t\tthis.setState({ showModal: true, modalInfo: info });\n\t}\n\n\tshowEnd = (win) => {\n\t\tvar endMessage = \"Boom\"\n\t\tif (win) endMessage = `You won in ${this.gameStatsRef.current.getTime()} seconds`;\n\t\tthis.setState({ showEnd: true, endMessage: endMessage, started: false });\n\t}\n\n\trestart = () => {\n\t\tthis.gameStatsRef.current.reset();\n\t\tthis.state.engine.setGameMode(this.state.easy);\n\t\tthis.setState({ showModal: false, started: false }, this.settingsRef.current.toggleStart());\n\t}\n\n\trender = () => {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div id='top-div'>\n\t\t\t\t\t<TopNavigation />\n\t\t\t\t\t<div id=\"content\">\n\t\t\t\t\t\t<Settings\n\t\t\t\t\t\t\tended={this.state.showEnd}\n\t\t\t\t\t\t\tendMessage={this.state.endMessage}\n\t\t\t\t\t\t\tupdateDifficulty={this.updateDifficulty}\n\t\t\t\t\t\t\tupdateStarted={this.updateStarted}\n\t\t\t\t\t\t\trestart={this.restart}\n\t\t\t\t\t\t\tref={this.settingsRef}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TileArea\n\t\t\t\t\t\t\teasy={this.state.easy}\n\t\t\t\t\t\t\tstarted={this.state.started}\n\t\t\t\t\t\t\tshowEnd={this.showEnd}\n\t\t\t\t\t\t\trestart={this.restart}\n\t\t\t\t\t\t\tgameStats={this.gameStatsRef}\n\t\t\t\t\t\t\tsettings={this.settingsRef}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<GameStats\n\t\t\t\t\t\t\teasy={this.state.easy}\n\t\t\t\t\t\t\tstarted={this.state.started}\n\t\t\t\t\t\t\tref={this.gameStatsRef}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<MyModal showModal={this.state.showModal} modalInfo={this.state.modalInfo} />\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}